---
title: "Overview of PA templates"
---

This section provides an orientation to the code templates for implementing the PA proof-of-concept framework. These templates were developed by colleagues at MDRC and edited by me. Here are some notes about these templates:

-   They can be accessed at: https://patools.sprouthub.io. You will log in with the provided username and password. This will take you to your personal work space in R Studio, where you can upload data, edit R notebooks, run analyses and download results.

-   The templates are organized into three primary R notebooks:

    -   01_Learner_Specification.Rmd

    -   02_Learner_Training_and_Validation.Rmd

    -   03_Learner_Testing.Rmd

If you are new to the concept of R notebooks, these are dynamic documents with a `.Rmd` extension that offer a seamless way to blend both analytics and narrative. R notebooks contain:

1.  **Text Content**:
    -   The text elements are written using "markdown language," a lightweight markup language with plain-text-formatting syntax. It makes the document easily readable in almost any text editor. However, if you're not well-acquainted with markdown, R Studio's "visual" mode can come in handy. This interface simplifies the editing experience, rendering a user-friendly environment akin to conventional word processors, minimizing the need to juggle through markdown syntaxes.
    
2.  **Code Chunks**:
    -   R notebooks are compartmentalized into distinct sections called "chunks," each capable of executing R code independently. This modularity facilitates iterative development and debugging, as you can focus on and run one chunk at a time. When you're ready to compile the entire notebook, the "knit" function transforms the `.Rmd` file into a cohesive document in formats like PDF, HTML, or DOCX. Our templates are preset to render PDFs for uniformity and ease of sharing.

    -   One of the advantageous features of R notebooks is the flexibility in displaying code. You can choose to showcase the code alongside its output, hide the code to present only the results, or even conceal both to keep the report neat, depending on your audience's preference and the context of the presentation.

In essence, R notebooks epitomize the integration of data analysis and reporting. You can write, execute, and test R code in isolated chunks, ensuring each segment is accurate and efficient before proceeding. Concurrently, the narrative, including explanations, interpretations, and visualizations, can be weaved in between these chunks. This interleaving of code and commentary fosters a comprehensive, reproducible, and easily interpretable analysis, culminating in a well-organized, professional report.

The R notebook templates listed above are designed to be "user-friendly" in that they do not include lengthy chunks of complicated code. Rather, they call other R scripts that contain multiple functions and work in the background.



